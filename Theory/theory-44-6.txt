44-6 Display form data in a table and form error handle
========================================================
ProductManagement.jsx-->>> line 7
 const[products, setProducts] = useState([]);

    const handleAddProduct = newProduct =>{

    }

    ===================App.jsx
    
import './App.css'
import ControlledField from './Components/ControlledField/ControlledField'
import FormAction from './Components/FormAction/FormAction'
import HookForm from './Components/HookForm/HookForm'
import ProductManagement from './Components/ProductManagement/ProductManagement'
import SimpleForm from './Components/SimpleForm/SimpleForm'
import UnControlledField from './Components/UnControlledField/UnControlledField'

function App() {

  return (
    <>
      <h3>Vite + React</h3>
      <h3>Explore React Form</h3>
      {/* <SimpleForm></SimpleForm> */}
      {/* <FormAction></FormAction> */}
      {/* <ControlledField></ControlledField> */}
      {/* <UnControlledField></UnControlledField> */}
      {/* <HookForm></HookForm> */}
      <ProductManagement></ProductManagement>
    </>
  )
}

export default App 

==============>>>ProductManagement.jsx
import React, { useState } from 'react';
import ProductForm from './ProductForm';
import ProductTable from './ProductTable';

const ProductManagement = () => {

    const[products, setProducts] = useState([]);

    const handleAddProduct = (newProduct) =>{
        const newProducts = [...products, newProduct];
        setProducts(newProducts);
    }

    return (
        <div>
            <ProductForm handleAddProduct={handleAddProduct}></ProductForm>
            <ProductTable products={products}></ProductTable>
        </div>
    );
};

export default ProductManagement;
===========================>>>ProductForm.jsx
import React, { useState } from 'react';


const ProductForm = ({handleAddProduct}) => {

    const [error, setError] = useState('')

    const handleProductSubmit = (e) =>{
    e.preventDefault();
    // console.log(e.target)

    const name = e.target.name.value;
    const price = e.target.price.value;
    const quantity = e.target.quantity.value;
    // console.log(name, price, quantity);

    if(name.length === 0){
        setError("Please Probide Product Name");
        return;
    }
    else if(price.length === 0){
        setError("Please Probide Product Price");
        return;
    }
    else if(price < 0){
        setError("Price Can Not Be Negative");
        return;
    }
    else if(quantity.length === 0){
        setError("Please Probide Product Quantity");
        return;
    }
    else{
        setError("");
    }

    const newProduct = {
        name,
        price,
        quantity
    }
    // console.log(newProduct);
    // use return
    handleAddProduct(newProduct);  
    // if(!error){
    //     handleAddProduct(newProduct);
    // }

}

    return (
        <div>
            <h3>Add A Product</h3>
            <form onSubmit={handleProductSubmit} action="">
                <input type="text" name="name" placeholder="Product Name" /> <br />
                <input type="text" name="price" placeholder="Product Price" /> <br />
                <input type="text" name="quantity" placeholder="Product Quantity" /> <br />
                <input type="submit" value="Submit" />
            </form>
            <p style={{color:"red"}}><small>{error}</small></p>
        </div>
    );
};

export default ProductForm;

=========================>>>ProductTable.jsx
import React from 'react';

const ProductTable = ({products}) => {
    return (
        <div>
            <h3>Products : {products.length}</h3>
            <table>
                <thead>
                    <tr>
                        <th>No.</th>
                        <th>Product Name</th>
                        <th>Price</th>
                        <th>Quantity</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    {
                        products.map((product, index)=> <tr key={index}> 
                        <td>{index + 1}</td>
                        <td>{product.name}</td>
                        <td>{product.price}</td>
                        <td>{product.quantity}</td>
                        <td></td>
                    </tr>)
                    }
                </tbody>
            </table>
        </div>
    );
};

export default ProductTable;